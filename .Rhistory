roxygen2::roxygenise(getwd())
devtools::install_github("GiulioGenova/MonalisR")
roxygen2::roxygenise(getwd())
devtools::install_github("GiulioGenova/MeteoBrowser",ref = "package")
remove.packages("MonalisR")
remove.packages("MeteoBrowser")
devtools::install_github("GiulioGenova/MeteoBrowser",ref = "package")
devtools::install_github("GiulioGenova/MeteoBrowser",ref = "package")
run_app()
run_app('MeteoBrowser',launchBrowser = F)
remove.packages(MeteoBrowser)
remove.packages("MeteoBrowser")
devtools::install_github("GiulioGenova/MeteoBrowser",ref = "package")
run_app('MeteoBrowser',launchBrowser = F)
remove.packages("MeteoBrowser")
devtools::install_github("GiulioGenova/MeteoBrowser",ref = "package")
run_app('MeteoBrowser',launchBrowser = F)
run_app('MeteoBrowser',launchBrowser = T)
remove.packages("leaflet")
remove.packages("leaflet.extras")
devtools::install_github('rstudio/leaflet')
devtools::install_github('bhaskarvk/leaflet.extras')
run_app('MeteoBrowser',launchBrowser = T)
remove.packages("MeteoBrowser")
devtools::install_github("GiulioGenova/MeteoBrowser",ref = "package")
roxygen2::roxygenise()
remove.packages("MeteoBrowser")
devtools::install_github("GiulioGenova/MeteoBrowser",ref = "package")
run_app('MeteoBrowser',launchBrowser = T)
remove.packages("MeteoBrowser")
devtools::install_github("GiulioGenova/MeteoBrowser",ref = "package")
library(MeteoBrowser)
?run_app
roxygen2::roxygenise()
remove.packages("MeteoBrowser")
devtools::install_github("GiulioGenova/MeteoBrowser",ref = "package")
?run_app
roxygen2::roxygenise()
remove.packages("MeteoBrowser")
devtools::install_github("GiulioGenova/MeteoBrowser",ref = "package")
?run_app
if (interactive()) {
ui <- fluidPage(
passwordInput("password", "Password:"),
actionButton("go", "Go"),
verbatimTextOutput("value")
)
server <- function(input, output) {
output$value <- renderText({
req(input$go)
isolate(input$password)
})
}
shinyApp(ui, server)
}
library(shiny)
library(shinydashboard)
Logged = FALSE
my_username <- "test"
my_password <- "test"
ui <- dashboardPage(skin='blue',
dashboardHeader( title = "Dashboard"),
dashboardSidebar(),
dashboardBody("Test",
# actionButton("show", "Login"),
verbatimTextOutput("dataInfo")
)
)
server = function(input, output,session) {
values <- reactiveValues(authenticated = FALSE)
# Return the UI for a modal dialog with data selection input. If 'failed'
# is TRUE, then display a message that the previous value was invalid.
dataModal <- function(failed = FALSE) {
modalDialog(
textInput("username", "Username:"),
passwordInput("password", "Password:"),
footer = tagList(
# modalButton("Cancel"),
actionButton("ok", "OK")
)
)
}
library(shiny)
library(shinydashboard)
i <- dashboardPage(skin='blue',
dashboardHeader( title = "Dashboard"),
dashboardSidebar(),
dashboardBody("Test",
# actionButton("show", "Login"),
verbatimTextOutput("dataInfo")
)
)
server = function(input, output,session) {
values <- reactiveValues(authenticated = FALSE)
# Return the UI for a modal dialog with data selection input. If 'failed'
# is TRUE, then display a message that the previous value was invalid.
dataModal <- function(failed = FALSE) {
modalDialog(
textInput("username", "Username:"),
passwordInput("password", "Password:"),
footer = tagList(
# modalButton("Cancel"),
actionButton("ok", "OK")
)
)
}
library(shiny)
library(shinydashboard)
Logged = FALSE
my_username <- "test"
my_password <- "test"
ui <- dashboardPage(skin='blue',
dashboardHeader( title = "Dashboard"),
dashboardSidebar(),
dashboardBody("Test",
# actionButton("show", "Login"),
verbatimTextOutput("dataInfo")
)
)
server = function(input, output,session) {
values <- reactiveValues(authenticated = FALSE)
# Return the UI for a modal dialog with data selection input. If 'failed'
# is TRUE, then display a message that the previous value was invalid.
dataModal <- function(failed = FALSE) {
modalDialog(
textInput("username", "Username:"),
passwordInput("password", "Password:"),
footer = tagList(
# modalButton("Cancel"),
actionButton("ok", "OK")
)
)
}
# Show modal when button is clicked.
# This `observe` is suspended only whith right user credential
obs1 <- observe({
showModal(dataModal())
})
# When OK button is pressed, attempt to authenticate. If successful,
# remove the modal.
obs2 <- observe({
req(input$ok)
isolate({
Username <- input$username
Password <- input$password
})
Id.username <- which(my_username == Username)
Id.password <- which(my_password == Password)
if (length(Id.username) > 0 & length(Id.password) > 0) {
if (Id.username == Id.password) {
Logged <<- TRUE
values$authenticated <- TRUE
obs1$suspend()
removeModal()
} else {
values$authenticated <- FALSE
}
}
})
output$dataInfo <- renderPrint({
if (values$authenticated) "OK!!!!!"
else "You are NOT authenticated"
})
}
shinyApp(ui,server)
MeteoBrowser::run_app()
MeteoBrowser::run_app('MeteoBrowser')
MeteoBrowser::run_app("MeteoBrowser")
setwd("..")
setwd("..")
datasets::Nile
library(datasets)
#assuming that the population out of wich we take the sample is normally
#distributed
t.test(Nile,alternative = "two.sided",mu = 900,conf.level = 0.95)
# trying to understand if this list of values is compatible with
# a poluplation with a mena of 900
# p value is 0.25 so it is n
sd(Nile)
# two sided: see if the data is compatible with mean = something
# less: see if the data is compatible with mean <= something
# greater : see if the data is compatible with mean >= something
t.test(htemp,"greater",mu=49)
# two sided: see if the data is compatible with mean = something
# less: see if the data is compatible with mean <= something
# greater : see if the data is compatible with mean >= something
t.test(temp,"greater",mu=49)
library(datasets,help = T)
library(help = "datasets")
MeteoBrowser::run_app("MeteoBrowser")
library(MeteoBrowser)
MeteoBrowser::run_app("MeteoBrowser")
MeteoBrowser::run_app("MeteoBrowser")
library(MeteoBrowser)
MeteoBrowser::run_app("MeteoBrowser")
MeteoBrowser::run_app("MeteoBrowser",launchBrowser = F)
devtools::install_github("GiulioGenova/MeteoBrowser",ref = "package")
devtools::install_github("GiulioGenova/MeteoBrowser",ref = "package")
MeteoBrowser::run_app("MeteoBrowser",launchBrowser = F)
